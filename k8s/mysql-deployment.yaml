# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: manual
# provisioner: kubernetes.io/no-provisioner
# volumeBindingMode: WaitForFirstConsumer
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: mysql-pv
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 256Mi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/var/lib/mysql"

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
   - ReadWriteOnce
  resources:
   requests:
    storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
   matchLabels:
     app: mysql
  template:
   metadata:
     labels:
      app: mysql
   spec:
    containers:
    - name: mysql
      image: mysql:8.0.23
      env:
      - name: MYSQL_ROOT_PASSWORD
       value: zaid@11
      ports:
      - containerPort: 3306
       volumeMounts:
       - name: mysql-persistent-storage
        mountPath: /var/lib/mysql
    volumes:
     - name: mysql-persistent-storage
      persistentVolumeClaim:
      claimName: mysql-pvc

---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: mysql-initdb-cm
# data:
#   init.sql: |
#     CREATE DATABASE IF NOT EXISTS boa_db;



---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
    port: 3306
    targetPort: 3306

